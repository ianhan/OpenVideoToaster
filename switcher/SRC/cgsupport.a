********************************************************************
* cgsupport.a
*
* Copyright (c)1995 NewTek, Inc.
* Confidental and Proprietary. All rights reserved.
*
* $Id: cgsupport.a,v 2.43 1996/02/27 17:11:17 Holt Exp $
*
* $Log: cgsupport.a,v $
*Revision 2.43  1996/02/27  17:11:17  Holt
*improved control of tbar fades with auto and unauto.
*
*Revision 2.42  1996/02/23  13:53:34  Holt
*changed palette used in non-aa key fades.
*
*Revision 2.41  1996/02/08  13:22:30  Holt
*Added call to ClearClapBoarddv to Keyremove.
*
*Revision 2.40  1996/02/06  16:21:47  Holt
*Made TBar handling of keys a little bit better.
*
*Revision 2.39  1995/10/19  17:11:55  Holt
*fixed problem with SCrawl not init fx memory.
*
*Revision 2.38  1995/09/25  16:48:57  Holt
**** empty log message ***
*
*Revision 2.37  1995/09/21  17:25:56  Holt
*put some code in to support var fade for keys.
*
*Revision 2.36  1995/08/28  13:08:08  Holt
*OBUTTON, now does take.
*/
*
*Revision 2.35  1995/08/22  18:01:31  Holt
*Added clapboard and change cut on to -1 from -2.
*
*Revision 2.34  1995/08/14  12:54:30  Holt
*removed call to update editor
*reduded overhead time to bring up key.
*
*Revision 2.33  1995/08/10  17:40:43  Holt
*added more Wait4Time and put args with them
*
*Revision 2.32  1995/08/09  12:20:36  Holt
*added more support for seq. keys.
*
*Revision 2.31  1995/06/15  12:34:25  Holt
*should no longer do a load_scrawl after removing a Scrawl.
*
*Revision 2.30  1995/06/05  14:11:10  Holt
**** empty log message ***
*
*Revision 2.29  1995/06/05  14:10:12  Holt
**** empty log message ***
*
*Revision 2.28  1995/04/28  07:47:03  Flick
*Scroll hold time now uses new "HoldFields" tag
*
*Revision 2.27  1995/04/26  14:08:12  Holt
*made keyfades 2x faster on 2000
*
*Revision 2.26  1995/04/25  17:27:40  Holt
*attempted to fix a problem with hits on bad current load page.
*
*Revision 2.25  1995/04/25  16:11:26  Holt
*may have fixed 2000 switcher problems
*
*Revision 2.24  1995/04/24  09:03:16  Holt
*removed debug
*
*Revision 2.23  1995/04/24  08:58:58  Holt
*Fixed fade out quirk.
*
*Revision 2.22  1995/04/22  16:07:15  Holt
*made fade in of keys smoother.
*
*Revision 2.21  1995/04/21  12:00:36  Holt
*may now have fixed keyfade in.
*
*Revision 2.19  1995/04/20  17:46:48  Holt
*may have fixed key fades.
*
*Revision 2.18  1995/03/17  19:31:04  pfrench
*Removed alldumps stuff
*
*Revision 2.17  1995/03/17  12:27:30  CACHELIN4000
*remove serdebugs
*
*Revision 2.16  1995/03/16  11:35:07  Holt
**** empty log message ***
*
*Revision 2.15  1995/03/15  13:03:35  Holt
*KEY PAGES SHOULD NOW WORK IN MOST CASES
*
*Revision 2.14  1995/03/14  16:48:14  Holt
**** empty log message ***
*
*Revision 2.13  1995/02/28  16:19:36  CACHELIN4000
*add FGC_Remove to KeyHandler, 4-bit key palettes
*
*Revision 2.12  1995/02/21  20:17:15  Kell
*Smooth fade logic for DIB on A4000
*
*Revision 2.11  1995/02/20  04:44:57  Kell
*Button logic and handlers for TBar and Auto.  Not totally working.
*
*Revision 2.10  1995/02/18  05:44:17  Kell
*Now checks imagery bit before doing a SendProjectEditRenderMessage just befor a new screen depth is installed.
*
*Revision 2.9  1995/02/17  15:38:39  Kell
*Now lets Editor know or reduced screen deepth during keys.
*Prevents AVEI from appearing during sequence.
*
*Revision 2.8  1995/02/17  10:22:17  CACHELIN4000
*Check NumFields,Speed tags for scrawls and put values into _CurrentMovePage on ToMain
*
*Revision 2.7  1995/02/16  20:45:50  Kell
*Massive changes for support of Keyed Pages.  Now works from switcher environment.  Still needs work to sequence.
*
*Revision 2.6  1995/02/12  05:20:14  Kell
**** empty log message ***
*
*Revision 2.5  1995/02/06  17:15:12  Kell
*Now actually does something for Scrawl croutons.
*
*Revision 2.4  1995/02/06  15:14:26  Kell
*Started to do scrawl handlers.
*
*Revision 2.3  1995/01/31  10:28:57  Kell
*Investigated copying keys from fast to chip with faster routine.
*Still too slow to do in one field.
*
*Revision 2.2  1995/01/26  22:07:30  Kell
*Tweeks to key palettes.  Now moves Fast Alpha to Chip BM.
*
*Revision 2.1  1995/01/24  11:50:22  Kell
*More work on Keyed pages. Hardcoded palettes, new calls to InstallShallowIKey...  etc.
*
*Revision 2.0  1995/01/12  23:01:29  Kell
*FirstCheckIn
*
*
*********************************************************************

	include	"assembler.i"
	include "graphics/gfx.i"
	include	"hardware/custom.i"

	include	"instinct.i"
	include	"custom.i"
	include "cop.i"
	include "tags.i"
	include "commonrgb.i"
	include "frameload.i"
	include "vtdebug.i"
	include "macros.i"
	include "serialdebug.i"
	include "movepage.i"

;;SERDEBUG	set	1
	ALLDUMPS

DBRA	set	1	;debug always.
;DBKH	set	1	;debug Key Handler
;DBDH	set	1	;debug David's Handler
DBFS	set	1	;debug fade speeds

WAITUNTIL	MACRO
	movem.l	d0-d1,-(sp)
	moveq 	#\1,d0
	moveq	#0,d1
	CALLTL	Wait4Time
	movem.l	(sp)+,d0-d1	
	ENDM


	XREF	DummyCroutonHandler
	XREF	_CurrentMovePage
	XREF	HoldFields

;;*******************************************************************
	XDEF	ScrollHandler,CrawlHandler
ScrollHandler
CrawlHandler
	movem.l	4(sp),d0/a3/a5

	DEBUGHEXI.l	DBKH,<ScrawlHandler FG=>,a3,< >
	DEBUGHEXI.l	DBKH,<FGC_CMD=>,d0,<\>

* d0=FGC_command, a0=buttlog, a1=Auto/TBarHandler, a3->FG, a4->EFXbase, a5->TB
	cmpi.w	#FGC_TOMAIN,d0
	bne.s	120$

	move.l a3,a0
	move.l	#TAGID_Speed,d0
	CALLTL	GetLongValue
	move.l _CurrentMovePage,a0
	cmp.l	#0,a0
	beq	313$			;may need to go total panic
	move.b	d0,mp_Speed(a0)
313$
	cmpi.l	#CrUD_Scroll,FGS_ObjectType(a3)
	beq.s	110$
* Assume Crawl
	XJMP	_FGC_ToMainCrawl	;what if this fails ***!!! ???

* Its a Scroll
110$	move.l a3,a0
	move.l	#TAGID_HoldFields,d0  ; This is the hold time
	CALLTL	GetLongValue
	move.l d0,HoldFields
	move.l _CurrentMovePage,a0
	cmp.l	#0,a0
	beq	210$			;total panic	
	tst.l 	d0
	beq.s	111$
	move.b	#PLAY_AND_FREEZE,mp_PlayMode(a0)
	bra.s 112$
111$	move.b	#PLAY_ONCE,mp_PlayMode(a0)

112$	XJMP	_FGC_ToMainScroll	;what if this fails ***!!! ???

*----------------------------------
120$	cmpi.w	#FGC_REMOVE,d0
	bne	130$
;	DUMPMSG	<FGC_REMOVE>
	XJSR	_FGC_RemoveScrawl

;	DUMPMSG	<InitEFXChipMem>
	XJSR	InitEFXChipMem		;After SCrawl removed init the efx memory
;	DUMPMSG	<InitDVEFastMem>
	XJSR	InitDVEFastMem
;	DUMPMSG	<InitDVEChipMem>
	XJSR	InitDVEChipMem

	bra.s	10$

130$	cmpi.w	#FGC_UNLOAD,d0
	bne.s	10$
;;	DUMPMSG	<FGC_UNLOAD>
	XJSR	_FGC_UnloadScrawl




	bra	210$		;; added this on 6/15/95 keeps unload from 
				;; somehow loading a nonexistant crouton. DEH
	
10$	movem.l	d0/a3/a5,-(sp)
;;	DUMPMSG	<DummyCroutonHandler>
	jsr	DummyCroutonHandler
	lea	12(sp),sp

* d0=FGC_command, a0=buttlog, a1=Auto/TBarHandler, a3->FG, a4->EFXbase, a5->TB
	cmpi.w	#FGC_LOAD,d0
	bne.s	200$
;	DUMPREG	<FGC_LOAD>
	XJMP	_FGC_LoadScrawl

200$	cmpi.w	#FGC_SELECT,d0
	bne.s	210$
	movea.l	FGS_FileName(a3),a0
	XJMP	_FGC_SelectScrawl	;what if this fails ***!!! ???
;;	DUMPMSG	<FGC_SelectScrawl>
210$	rts

;;*******************************************************************
;;*******************************************************************
;;*******************************************************************




**************** UNMOD AS OF 080795
 IFEQ 0

 	XDEF	KeyHandler
KeyHandler
	movem.l	4(sp),d0/a3/a5

	DEBUGHEXI.l	DBRA,<KeyHandler FG=>,a3,<\>
	DEBUGHEXI.l	DBRA,<FGC_CMD=>,d0,<\>
*	DEBUGHEXI.l	DBKH,<FGC_CMD=>,d0,<\>
*	DEBUGMEM.l	DBKH,<Clock= >,TB_MasterClock(a5),4,<\>
*---------------------------------------------------------
* d0=FGC_CMD, a3->FG, a4->EFXbase, a5->TB
	suba.l	a2,a2			;no EffectsData

	lea	HandleAlphaTBar(pc),a1
	cmp.w	#FGC_TBAR,d0
	beq	HandleAlphaTBar
*	beq.s	44$

	lea	HandleAlphaAuto(pc),a1
	cmpi.w	#FGC_AUTO,d0
	beq.s	46$
	cmpi.w	#FGC_UNAUTO,d0
	bne	25$

	
	cmp.w	#$01ff,TB_TValSec(a5)
	beq.s	46$
	tst.w	TB_TValSec(a5)
	beq.s	46$

	eor.w	#1,FadeOffFlag

;	tst.w	TB_OLaySec(a5)
;	bne.s	46$
;	clr.w	FadeOffFlag		;No Overlay (so can only fade in)
;	bra.s	45$
46$

;	cmp.w	#$1ff,TB_TValSec(a5)
;	bne	15$	
;	move.w	#1,FadeOffFlag		

* Assume Fading Off
45$	lea	AlphaOffLogic(pc),a0
	tst.w	FadeOffFlag
	bne.s	47$
	DUMPMSG	<On  >
	LEA	FrameOLay,A1	
	lea	AlphaOnLogic(pc),a0
	bra.s	48$
47$
	nop
	DUMPMSG <Off >
48$
	bra	FrameAuto
*---------------------------------------------
25$	
;;	DUMPMSG	<NOT AN AUTO>
	cmpi.w	#FGC_SELECT,d0
	bne.s	5$

	movem.l	d0-d3/a0-a3,-(sp)		;get fade time tag.
	move.l	#TAGID_FadeInDuration,d0	;assume find type
	CALLTL  GetTagValue
	tst.l	d0
	beq	88$
	move.w	d0,TB_FCountSec(a5)
**update fastgads! for speed selection ? no bogus can't!	
88$	movem.l	(sp)+,d0-d3/a0-a3

;	DUMPMSG	<in keyhandle FGC_SELECT>	
	cmp.l	TB_EfxFG(a5),a3		; do ToPrvw if already selected.
	beq	FrameToPrvw

5$	cmpi.w	#FGC_TOPRVW,d0		;maybe kill key if allready up for seq <<<add? this later?
	beq	FrameToPrvw

;;	DUMPMSG	<checking tomain>
	cmpi.w	#FGC_TOMAIN,d0
	beq	CutFrameToMain		;branch to FrameToMain? this makes stack go boom!DEH031495

	cmpi.w	#FGC_FREEZE,d0
	bne.s	15$
	PUT.w	TB_VideoFlagPri(a5),TB_VideoFlagSec	;lock freeze button
	bra	100$

15$	cmpi.w	#FGC_CLIP,d0
	bne.s	20$
	bsr	FrameClip	;not much happens
	tst.w	TB_OLaySec(a5)
	bne	666$		;jump if leaving key up
	JUMPTL	CookAndServeClipA

20$	cmpi.w	#FGC_TAKE,d0
	bne.s	30$
;;	DUMPMSG	<in key handle FGC_TAKE>
	bsr	FrameTake
	tst.w	TB_OLaySec(a5)
	bne.s	100$		 ;jump if didn't want FrameToMain
	PUT.w	FrameLoadBank,TB_OLaySec ;did FrameToMain, show correct bank
	bra.s	666$

30$	cmpi.w	#FGC_OBUTTON,d0
	bne.s	40$
	bsr	FrameOLay
	tst.w	TB_OLaySec(a5)
	bne.s	666$		;jump if did FrameToMain
	JUMPTL	CookAndServeOLay

;*** By Arnie .. don't we need a REMOVE
40$	cmpi.w	#FGC_REMOVE,d0
	bne.s	100$
;;	DUMPMSG	<FGC_REMOVE>

	XJSR	ClearBoarddv

	WAITUNTIL	0	
	CALLTL	KillAlphaKey		;TEST!!!DEH031595
	bra.s 666$

100$	movem.l	d0/a3/a5,-(sp)
	jsr	DummyCroutonHandler
	lea	12(sp),sp

* d0=FGC_command, a0=buttlog, a1=Auto/TBarHandler, a3->FG, a4->EFXbase, a5->TB
	cmpi.w	#FGC_SELECT,d0
	beq	FrameSelect
666$	rts



FrameAuto
	move.l	d0,-(sp)
	DUMPMSG	<FrameAuto>
	sub.l	a0,a0		;test /seems alphalogic doesnt matter
	tst.w	FadeOffFlag		
	bne	30$

	bsr	FrameToMain
	bra	20$
30$
	bsr	HandleAlphaAuto
	XJSR	ClearBoarddv

20$	move.l	(sp)+,d0
	rts




*--------------------------------------
FrameOLay
	move.l	d0,-(sp)
	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off

	move.w	FrameLoadBank,d0
	cmp.w	TB_OLaySec(a5),d0
	bne.s	10$
	clr.w	TB_OLaySec(a5)		;force a ToMain
;;	DUMPMSG	<frameolay calling frametomain>
	bsr	CutFrameToMain		;show it
	XJSR	ClearBoarddv
	bra.s	20$

****!!!! THIS NEEDS TO PUT A CLAPBOARD ON THE FrameLoadBank BUTTON
10$	clr.w	TB_OLaySec(a5)		;else kill it
	clr.w	FadeOffFlag	;killed key

20$	
	move.l	(sp)+,d0
	rts

*--------------------------------------
FrameClip
	move.l	d0,-(sp)
	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off

	GET.w	TB_ClipASec,d0
	cmp.w	TB_ClipAPri(a5),d0
	bne.s	20$			;let it move with no affect

* assume clicked on clip buttons
****!!!! THIS NEEDS TO PUT A CLAPBOARD ON THE FrameLoadBank BUTTON
	clr.w	FadeOffFlag	;killed key

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off
	clr.w	TB_OLaySec(a5)				;else kill it
20$	move.l	(sp)+,d0
	rts

*--------------------------------------
FrameTake
	movem.l	d0/a0,-(sp)

	clr.w	FadeOffFlag	;assume key will be killed

	tst.w	TB_OLaySec(a5) ;jump if Key is up, to do a standard take

	bne.s	100$	****!!!! THIS NEEDS TO PUT A CLAPBOARD BACK ON THE FrameLoadBank BUTTON

****!!!! THIS NEEDS TO REMOVE THE CLAPBOARD FROM THE FrameLoadBank BUTTON
* Want to take a new Source from Preview

	GET.w	TB_PrvwSec,d0
	PUT.w	TB_MainSec(a5),TB_PrvwSec
	PUT.w	d0,TB_MainSec
	DEA.l	TB_VTSetUp,a0
	CALLTL	Mask2AM
	ELHPUT_AM_R	a0,d0

;;	DUMPMSG	<frametake calling frametomain>
	bsr.s	CutFrameToMain		;show it

	clr.w	TB_OLaySec(a5)		;flag ToMain HACK
100$	XJSR	ClearBoarddv
	movem.l	(sp)+,d0/a0
	rts

*--------------------------------------
* To Preview Handler, a3->FG
FrameToPrvw:
	move.w	FrameLoadBank,d0
	cmp.w	TB_PrvwSec(a5),d0
	bne.s	10$
	rts

10$	PUT.w	d0,TB_PrvwSec
	movea.l	a3,a0
	CALLTL	FGC_PbuttonCommand
	JUMPTL	UpdateDisplay


*********** Cut a Key onto main
CutFrameToMain:
;;	DUMPMSG	<entering FrameToMain>
	movem.l	d0/a0,-(sp)
	move.w	FrameLoadBank,d0
	cmp.w	TB_OLaySec(a5),d0
	bne.s	10$
	movem.l	(sp)+,d0/a0
	rts
10$
;;	DUMPMSG	<cont. frametomain>
	PUT.w	d0,TB_OLaySec
	movea.l	a3,a0

	moveq	#0,d0
	move.w	KeyTop,d0
;;	DUMPMSG	<before putupkey>

	bsr	PutUpKey		;***!! KEY MIGHT ALREADY BE IN CHIP!
***
	lea	HandleAlphaAuto(pc),a1
	moveq	#0,d0
	moveq	#1,d1
	lea	AlphaOnLogic(pc),a0

	jsr	CUTITONOFF
***
;; 	DUMPMSG	<after putupkey>
	move.w	#1,FadeOffFlag		;key up so will need to fade off

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off

;;	DUMPMSG	<before UpdateDisplay>
;;	CALLTL	UpdateDisplay
;;	DUMPMSG	<after UpdateDisplay>

	movem.l	(sp)+,d0/a0
	rts




* To Main Handler (to bring to OLay, click on OLay bus or uses LumKey FX)
* a3->FG
****!!!! THIS NEEDS TO REMOVE THE CLAPBOARD FROM THE FrameLoadBank BUTTON
FrameToMain
	DUMPMSG	<entering FrameToMain>
	movem.l	d0/a0,-(sp)
*	move.w	FrameLoadBank,d0
*	cmp.w	TB_OLaySec(a5),d0
*	bne.s	10$
*	DUMPMSG	<leaving FrameToMain early>
*	movem.l	(sp)+,d0/a0
*	rts
*
*10$
	tst.l	TB_CurrentAlphaBM(a5)
	bne.s	6$				;jump if alpha up

	move.w	FrameLoadBank,d0
	PUT.w	d0,TB_OLaySec
	movea.l	a3,a0

	moveq	#0,d0
	move.w	KeyTop,d0
;;	DUMPMSG	<before putupkey>
	bsr	PutUpKey		;***!! KEY MIGHT ALREADY BE IN CHIP!
***
6$
	lea	HandleAlphaAuto(pc),a1
	moveq	#0,d0
	moveq	#1,d1
	lea	AlphaOnLogic(pc),a0
	jsr	HandleAlphaAutoOn
***
;;	DUMPMSG	<after putupkey>
	move.w	#1,FadeOffFlag		;key up so will need to fade off

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off

;	DUMPMSG	<before UpdateDisplay>
;	CALLTL	UpdateDisplay
;	DUMPMSG	<after UpdateDisplay>

	move.w	#$01ff,TB_TValSec(a5)
	CALLTL	UpdateTBar

	movem.l	(sp)+,d0/a0
	rts
 ENDC




*---------------------------------
* If LIVE DVE is being shown, there will be a jump cut when this freezes!!!
* If a Frozen bank is being keyed over the other bank, the Lumkey is killed.
* This will kill transitions, though LumKey might remain.
* a3->FG

****!!!! THIS NEEDS TO PUT A CLAPBOARD ON THE FrameLoadBank BUTTON
FrameSelect:
	
	WAITUNTIL	-1
;	DUMPMSG	<FrameSelect>
	movem.l	d0-d1/a0-a2,-(sp)
	GET.w	TB_InterfaceDepth,d0
	move.l	d0,-(sp)		;stash original depth

	clr.w	FadeOffFlag	;initially need to fade on

*---------------
* Don't show any LIVE DVE because we are going to freeze.
	GET.w	TB_MainSec,d0
	ISLIVEDVEON	d0
	beq.s	5$
	TURNLIVEDVEOFF	d0
	PUT.w	d0,TB_MainSec

5$	GET.w	TB_OLaySec,d0
	ISLIVEDVEON	d0
	beq.s	6$
	TURNLIVEDVEOFF	d0
	PUT.w	d0,TB_OLaySec

6$	GET.w	TB_PrvwSec,d0
	ISLIVEDVEON	d0
	beq.s	7$
	TURNLIVEDVEOFF	d0
	PUT.w	d0,TB_PrvwSec

*---------------
* Make sure we're frozen and have a spare bank to load to
7$	CALLTL	NoTransFreeze	;sends out ELH (I guess) (Can keep key up!)
	GET.w	TB_MainSec,d0

	XREF	ShiftedKey
	tst.w	ShiftedKey
	bne	8$		;If in Shifted Lumkey mode, forget it!

	GET.w	TB_OLaySec,d1

	ISFROZENDVEON	d0
	beq.s	10$
	ISFROZENDVEON	d1
	beq.s	10$

	cmp.w	d0,d1
	beq.s	10$
8$	CALLTL	KillAlphaKey	;kill alpha if there is any
	moveq	#0,d1
	PUT.w	d1,TB_OLaySec	;kill Lumkeying

*---------------
* At least one bank is available for Prvw (Main/OLay don't both use DV0 & DV1)
10$	DEA.l	TB_VTSetUp,a0

	cmpi.w	#M_DV0,d0
	beq.s	20$		;load to bank 1
	cmpi.w	#M_DV0,d1
	beq.s	20$		;load to bank 1

	cmpi.w	#M_DV1,d0
	beq	30$		;load to bank 0
	cmpi.w	#M_DV1,d1
	beq.s	30$		;load to bank 0

* Can load to either bank
	GET.w	TB_PrvwFroze,d0	;will load to bank not used last
	cmpi.w	#M_DV1,d0
	beq.s	30$

*---------------
* The writing routines will be OK if Prvw is currently on the Write bank.
* I don't care where Prvw is, so it is unchanged.
* Load to bank 1
20$	ELHSET_OBR	a0	;load into DV1
	move.w	#M_DV1,FrameLoadBank
	bra.s	40$

* Load to bank 0
30$	ELHCLEAR_OBR	a0	;load into DV0
	move.w	#M_DV0,FrameLoadBank

*---------------
* Can only remain in Lumkey mode, if it was non-shifted
40$	CALLTL	CookMain
	CALLTL	CookAndServePrvw

	movea.l	FGS_FileName(a3),a0	;used also below
	lea	MyPictureInfo(pc),a1
	CALLTL	QueryFile

;;	DUMPSDEC.l	<QueryFile=>,d0,<\>

	PUT.w	d0,TB_ErrFlag
	bne	610$	;-1=NOMEM, -2=FILEREAD, -3=NOHEAD see commonrgb.i

**-------------------------------------------------------------------
**	This is the Structure that is filled in by QueryFile
**-------------------------------------------------------------------
**+	STRUCTURE	PictureInfo,0
**+	LONG		PI_BMHEADERSIZE
**+	LONG		PI_BMHEADER
**+
**+	LONG		PI_PLANETYPESIZE
**+	LONG		PI_PLANETYPE
**+
**+	LONG		PI_BODYSIZE		;size of file or buffer
**+	LONG		PI_READBUFFER		;Pointer to read buffer
**+	LONG		PI_BUFFERPOINT		;Pointer inside read buffer
**+	LONG		PI_BUFFERREM		;#CHARACTER LEFT IN BUFFER
**+
**+	LONG		PI_PLANEBUFFER
**+	LONG		PI_PLANEBUFFERSIZE
**+
**+	LONG		PI_FILELOCK
**+	WORD		PI_Planes		;number of planes in 1 scan line
**+	WORD		PI_COMPOSITEFLAG	;bit 8 means composite
**+
**+	LABEL		PI_PLANEPOINTERS
**+	STRUCT		PI_RED,(8*4)		;These are pointers to planes
**+	STRUCT		PI_GREEN,(8*4)		;read off disk.  These are
**+	STRUCT		PI_BLUE,(8*4)		;set to spec by the PLTP chunk.
**+	STRUCT		PI_COMPOSITE1,(8*4)	;this allows planes to be
**+	STRUCT		PI_COMPOSITE2,(8*4)	;scrambled in any order.
**+	STRUCT		PI_ALPHA,(8*4)
**+	LABEL		PI_PLANEPOINTERSEND
**+	STRUCT		PI_Expansion,(15*4)	;this was put here so I could
**+						;fix the size of this
**+						;structure.
**+	LONG		PI_AlphaDepth
**+	LABEL		PI_SIZEOF
**+

**+------------------------------------------------
**+	STRUCTURE	frameload,0
**+	APTR		frml_filename	;file name to load
**+	APTR		frml_CustomBM	;this is the interface bitmap
**+					;to be used when data is being
**+					;sent to the toaster.
**+	APTR		frml_Palette	;This is the palette to be used
**+					;when writeing.
**+	APTR		frml_CustomBMTop ;this is where your interface(or alpha)
**+					;bitmap will start.
**+	LONG		frml_AMBM	;which side of the Fader should
**+					;be passed thru to MainOut, during
**+					;the "NON-SAFE" areas.
**+					;0 = AM, 1=BM
**+	APTR		frml_AlphaFill	;BM Where to put alpha data if any.
**+	LABEL		frml_SIZEOF
**+------------------------------------------------

	GET.l	TB_AlphaFastBM,a2

	move.l	PI_BMHEADER(a1),a0		;get height of file
	move.w	bmh_Height(a0),bm_Rows(a2)	;from bitmap header
	move.b	PI_AlphaDepth+3(a1),bm_Depth(a2)
	move.w	bmh_Y(a0),d0
;;	addq.w	#1,d0			;count key top from Toaster Line 1
	move.w	d0,KeyTop

;;	DUMPUDEC.b	<AlphaDepth=>,bm_Depth(a2),<\>

	lea	MyFrameLoad(pc),a1

* Assume no key is up (no CustomBM)
	clr.l	frml_Palette(a1)
	clr.l	frml_CustomBMTop(a1)
	clr.l	frml_AMBM(a1)		;always key over AM Mux

* leave any current Key up during Load if there's room

	GET.l	TB_CurrentAlphaBM,frml_CustomBM(a1)
**	beq	50$			;jump if no key is up
**	bra	50$


	GET.w	TB_CurrentAlphaTop,d0
	add.w	#1,d0			;actual line (count't half line)
	lsr.w	#1,d0			;Field Top (not Frame)

	cmpi.w	#8,d0
**	bcc.s	48$			;jump if can leave key up ?? Not good !DEH031495
**	clr.l	frml_CustomBM(a1)	;do you think this is a good idea?
*	DUMPMSG	<before KillAlphaKey>
*	CALLTL	KillAlphaKey
*	DUMPMSG	<after AfterKillAlphaKey>
*	bra.s	50$

48$	move.w	d0,frml_CustomBMTop+2(a1)
	GET.l	TB_CurrentAlphaPaletteKeyOnly,frml_Palette(a1)

	clr.w	TB_InterfaceDepth(a5)	;no interface, JUST KEY
	CALLTL	InstallAVEI
	bra.s	55$
*--------------
50$
;	DUMPMSG	<before InstallAVE>
	CALLTL	InstallAVE	;No Keyup (using 4 planes of Interface Mem for frameload!)
;	DUMPMSG	<after InstallAVE>

55$	move.l	FGS_FileName(a3),frml_filename(a1)
	move.l	a2,frml_AlphaFill(a1)		;dest BM

	lea	MyPictureInfo(pc),a0
	CALLTL	CloseQuery

	movea.l	a1,a0		;->FrameLoad struct
	CALLTL	FrameLoadNew

;	DUMPMSG	<after FrameLoadNew>

	lea	TB_VTSetUp(a5),a0		;determine bank to load to
	moveq.l	#0,d0
	ELHTEST_OBR	a0
	beq.s	470$
	move.l	#1,d0				;currentbank
470$	CALLTL	WriteLineZero			;Won't occur if FrameLoad left up key

	DEBUGHEXI.l	DBKH,<FrameLoadNew=>,d0,<\\>

	btst.b	#4,TB_DisplayRenderMode(a5)
	beq.s	555$			;jump if not sequencing

* sequencing (so put on preview automatically)
	bsr	FrameToPrvw

	PUT.w	2(sp),TB_InterfaceDepth	;restore depth ?????
	bra.s	666$			;Keep interface depth 0 ***!!! ???

* Not sequencing
555$	PUT.w	2(sp),TB_InterfaceDepth	;restore depth
	move.w	FrameLoadBank,d0
	and.b	#$30,d0
	lsr.b	#5,d0
	moveq	#1,d1
	XJSR	ClapBoarddv		;NEW CLAPBOARD CALL!!!! 


 	CALLTL	ReDoDisplay		; rebuild the display
580$	CALLTL	InstallAVEI		; and put up the interface

666$	addq.w	#4,sp
	movem.l	(sp)+,d0-d1/a0-a2
	rts

* haven't messed with AVEI depth yet
610$	lea	MyPictureInfo(pc),a0
	CALLTL	CloseQuery

	btst.b	#4,TB_DisplayRenderMode(a5)
	beq.s	580$			;jump if not sequencing
	bra.s	666$


********************************************************************
* d0=KeyTop, TB_OLaySec=key source bank
;***!! THIS IS DUMB BECAUSE KEY MIGHT ALREADY BE IN CHIP!
PutUpKey:
;;	DUMPREG	<PutUpKey d0=keytop>
	movem.l	d0-d3/a0-a4,-(sp)
***!!! THERES PROBABLY A BETTER WAY THAN TURNING OFF INTERRUPTS!!!
	CALLTL	SoftSpriteBPLCON0Off
;;	CALLTL	InterruptsOff			;Just trying to prevent the softsprite etc.
						;from trashing low Chip
	move.l	d0,d2				;Stash KeyTop

	GET.l	TB_CurrentAlphaBM,d0
	beq	5$				;jump if no key up
;;	DUMPMSG	<not jumping if key up.>
	movea.l	d0,a0				;source

	clr.w	TB_InterfaceDepth(a5)		;no interface because we're going to copy to it, JUST KEY
	CALLTL	InstallAVEI			;Move KEY to low Chip (interface area)
	GET.l	TB_TempChipBM,a1		;dest
	move.w	bm_Rows(a0),bm_Rows(a1)
	move.b	bm_Depth(a0),bm_Depth(a1)

	PUT.l	a1,TB_CurrentAlphaBM		;New Current Bitmap in LOW CHIP

	movem.l	d0-d7/a0-a6,-(sp)
	XJSR	_CopyFastBM			;see Scroll.c  d0-d1/a0-a1 killed
	movem.l	(sp)+,d0-d7/a0-a6

	clr.w	TB_InterfaceDepth(a5)		;no interface, JUST KEY
	CALLTL	InstallAVEI			;Move KEY to low Chip (interface area)

*--------------------
5$
	
	IFD	AACHIPS
	lea	AAKeysI,a0			;UserInterface OLay non-gray palettes (same as above)
	lea	AAKeysI,a1			;->Gray RGB Interface palettes
	lea	AAKeys,a2			;No interface, key only
	ENDC

	IFND	AACHIPS
	lea	NonAAKeysI,a0			;UserInterface OLay non-gray palettes
	lea	NonAAKeysGrayI,a1		;->Gray RGB Interface palettes
	lea	NonAAKeys,a2			;No interface, key only
	ENDC

	GET.l	TB_AlphaFastBM,a3		;source
	GET.l	TB_AlphaChipBM,a4		;destination
	move.w	bm_Rows(a3),bm_Rows(a4)

	moveq	#0,d0
	move.b	bm_Depth(a3),d0
;	DUMPREG	<d0 bm_Depth(a3)>
	subq.w	#1,d0				;1 plane = start of table
	add.w	d0,d0
	add.w	d0,d0
	add.w	d0,d0				;*8

	lea	0(a0,d0.w),a0			;->RGB palette, #interfaceplanes, #keyplanes
	lea	0(a1,d0.w),a1			;->Gray palette, #interfaceplanes, #keyplanes
	lea	0(a2,d0.w),a2			;->Key Only palette, #interfaceplanes, #keyplanes

	move.w	6(a0),d0
	move.b	d0,bm_Depth(a4)			;set destination depth

	moveq	#0,d3
	btst.b	#4,TB_DisplayRenderMode(a5)
*	bne.s	9$				;jump if sequencing


* NOT ALLOWING INTERFACE DURING SEQUENCING BECAUSE IT COULD BE TRASHED

	move.w	4(a0),d3			;stash final Interface depth
9$	tst.l	TB_CurrentAlphaBM(a5)
	bne.s	6$				;jump if alpha up

	btst.b	#AVEI_BIT,TB_Flags(a5)
	bne.s	4$
	CALLTL	InstallAVE			;just to be safe?
;	bra.s	6$

4$
;;	PUT.w	d3,TB_InterfaceDepth		;reduce depth of interface
;;	CALLTL	InstallAVEI

6$	PUT.l	(a0),TB_CurrentAlphaPaletteRGB
	PUT.l	(a1),TB_CurrentAlphaPalettePreview
	PUT.l	(a2),TB_CurrentAlphaPaletteKeyOnly
	PUT.w	d2,TB_CurrentAlphaTop 		;Keytop

	DEA.l	TB_VTSetUp,a0
	GET.w	TB_OLaySec,d0

	CALLTL	Mask2BM
	ELHPUT_BM_R	a0,d0

	move.w	#VTI_CDS_DIB,d0
	cmpi.b	#2,bm_Depth(a4)
	bls.s	8$
	move.w	#VTI_CDS_DIBGR,d0
8$	ELHPUT_CDS_R	a0,d0

	movea.l	a3,a0				;source
	movea.l	a4,a1				;dest
	XJSR	_CopyFastBM			;see Scroll.c  d0-d1/a0-a1 killed

	tst.l	TB_CurrentAlphaBM(a5)
	beq	10$				;jump if already have up key

	PUT.l	a4,TB_CurrentAlphaBM		;->new ChipAlpha

;;	clr.w	TB_InterfaceDepth(a5)
**	CALLTL	InstallAVEIdoELH

	PUT.w	d3,TB_InterfaceDepth		;correct depth (at least as much as above)
	CALLTL	ReDoDisplay			;It will notify the Editor, fix up all of the usable trashed chip
	CALLTL	InstallAVEI
	bra.s	12$

10$	PUT.l	a4,TB_CurrentAlphaBM		;->ChipAlpha
	PUT.w	d3,TB_InterfaceDepth

	tst.b	TB_Flags(a5)			;#IMAGERY_ONOFF_BIT
	bmi.s	11$				;jump if don't want any imagery

	btst.b	#7,TB_DisplayRenderMode(a5)	;is Editor in control of top ?

********** 081495 turned these off made it work better!
**	beq.s	11$				;Jump if editor not present (e.g. Setup Slice)
**test!	XJSR	SendProjectEditRenderMessage	;assume Editor loaded = CurrentDepth
11$	

*	CALLTL	InstallAVEIdoELH		;bring the key on.
** try fading key on!

12$ ;;	CALLTL	InterruptsOn
	CALLTL	SoftSpriteBPLCON0On

	movem.l	(sp)+,d0-d3/a0-a4
	rts


 IFEQ 0
****************************************************************
* HandleAlphaAuto(->TB)
* d0=auto/unauto, a0->logicTbl, a2->data, a3->FG, a4->EFXlib, a5->TB
**
HandleAlphaAuto:	
;	DUMPMSG	<HandleAlphaAuto>
	movem.l	d0-d6,-(sp)

	WAITUNTIL	-1

;	DEBUGMSG DBFS,<HandleAlphaAuto>

; 	DUMPMEM <EF_OLDTBar>,EF_OldTBar(a4),#16
; 	DUMPMEM <TB_TValSec>,TB_TValSec(a5),#16

;if tbar not 0 or 1ff
	DUMPMEM	<TB_TValSec(a5)>,TB_TValSec(a5),#16
	tst.w	TB_TValSec(a5)
	beq	505$	
	cmp.w	#$1ff,TB_TValSec(a5)
	beq	505$

;get tbar % of full and tbar % of time for fade
	moveq	#0,d1
	move.w	TB_TValSec(a5),d1

	moveq	#0,d2
	GET.W	TB_FCountSec,d2
	lsr.w	#2,d2

	mulu	d1,d2

	divu	#$1ff,d2
	and.l	#$0000ffff,d2

	DUMPREG	<Num of steps-d2>	

;setup start,inc,steps for fade loop
	moveq	#0,d4
	move.w	TB_TValSec(a5),d4
	lsl.w	#7,d4

	move.l	d4,d3

	move.l	#$1ff,d4
	sub.w	TB_TValSec(a5),d4
	lsl.w	#7,d4
	
	divu	d2,d3
	and.l	#$0000ffff,d3	

	DUMPREG	<start-d4, inc-d3, steps-d2>
	bra	510$


;else
;Set to defaults
505$	move.l	#$ff80,d3
	moveq	#0,d2
	GET.W	TB_FCountSec,d2
	lsr.w	#2,d2	
	divu	d2,d3			;incremental time
	and.l	#$0000ffff,d3		;clear upper word
	moveq	#0,d4

510$
	DEBUGREG DBFS,<D3 FADE TIME?>	

;	CALLTL	InterruptsOff

	IFD	AACHIPS		
	move.l	#$1,d1
;	moveq	#0,d4
	ENDC


	IFND	AACHIPS
	move.l	#$1,d1		;
	tst.w	FadeOffFlag	;Normally it will be fade on, these are for on
*	bne.s	45$
;	moveq	#0,d4
	ENDC

45$
	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>
*************************************************************
*
* KEY FADE LOOP
*
*************************************************************
	bra	50$
20$
	move.l	d4,d0

;;	CALLEF  ProcessDuring	
;;	DEBUGREG  DBFS,<BEFORE HandleAlpha>
;;	DUMPREG	<about to call HandleAlpha Time-d0>
	
	bsr	HandleAlpha		

	btst.b	#WAITABORT_BIT,TB_Flags3(a5)
	bne	39$

;	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>

	add.l	d3,d4
50$	dbra	d2,20$

	move.l	#$ffff,d0		;100% incase of errors in loop
	bsr	HandleAlpha		

39$		
;	CALLTL	InterruptsOn
	
	tst.w	FadeOffFlag		;Normally it will be fade on, these are for on
	beq.s	101$
;	DUMPMSG	<in keyfade killing alpha key>
	bsr	CUTITONOFF

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off
	CALLTL	KillAlphaKey		;TEST!!!DEH031595


101$
	movem.l	(sp)+,d0-d6
	rts
 ENDC




 IFEQ 0
****************************************************************
* HandleAlphaAuto(->TB)
* d0=auto/unauto, a0->logicTbl, a2->data, a3->FG, a4->EFXlib, a5->TB
**
HandleAlphaAutoOn:	
;	DUMPMSG	<HandleAlphaAuto>
	movem.l	d0-d6,-(sp)

	WAITUNTIL	-1

;	DEBUGMSG DBFS,<HandleAlphaAuto>

; 	DUMPMEM <EF_OLDTBar>,EF_OldTBar(a4),#16
; 	DUMPMEM <TB_TValSec>,TB_TValSec(a5),#16

;if tbar not 0 or 1ff
	DUMPMEM	<TB_TValSec(a5)>,TB_TValSec(a5),#16
	tst.w	TB_TValSec(a5)
	beq	505$	
	cmp.w	#$1ff,TB_TValSec(a5)
	beq	505$

;get tbar % of full and tbar % of time for fade
	moveq	#0,d1
	move.w	TB_TValSec(a5),d1

	moveq	#0,d2
	GET.w	TB_FCountSec,d2
	lsr.w	#2,d2	
	mulu	d1,d2

	divu	#$1ff,d2
	and.l	#$0000ffff,d2

	DUMPREG	<Num of steps-d2>	

;setup start,inc,steps for fade loop
	moveq	#0,d4
	move.w	TB_TValSec(a5),d4
	lsl.w	#7,d4

	move.l	#$ff80,d3
	sub.w	d4,d3

;	move.l	d4,d3
;	move.l	#$1ff,d4
;	sub.w	TB_TValSec(a5),d4
;	lsl.w	#7,d4
	
	divu	d2,d3
	and.l	#$0000ffff,d3	

	DUMPREG	<start-d4, inc-d3, steps-d2>
	bra	510$


;else
;Set to defaults
505$
*	cmp.w	#$1ff,TB_TValSec(a5)
*	bne.s	15$	
*	move.w	#1,FadeOffFlag		

15$
	move.l	#$ff80,d3
	moveq	#0,d2
	GET.w	TB_FCountSec,d2
	lsr.w	#2,d2	
	divu	d2,d3			;incremental time
	and.l	#$0000ffff,d3		;clear upper word
	moveq	#0,d4

510$
	DEBUGREG DBFS,<D3 FADE TIME?>	

;	CALLTL	InterruptsOff

	IFD	AACHIPS		
	move.l	#$1,d1
;	moveq	#0,d4
	ENDC


	IFND	AACHIPS
	move.l	#$1,d1		;
	tst.w	FadeOffFlag	;Normally it will be fade on, these are for on
*	bne.s	45$
;	moveq	#0,d4
	ENDC

45$
	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>
*************************************************************
*
* KEY FADE LOOP
*
*************************************************************
	bra	50$
20$
	move.l	d4,d0

;;	CALLEF  ProcessDuring	
;;	DEBUGREG  DBFS,<BEFORE HandleAlpha>
;;	DUMPREG	<about to call HandleAlpha Time-d0>
	
	bsr	HandleAlpha		

	btst.b	#WAITABORT_BIT,TB_Flags3(a5)
	bne	39$

;	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>

	add.l	d3,d4
50$	dbra	d2,20$

	move.l	#$ffff,d0		;100% incase of errors in loop
	bsr	HandleAlpha		

39$		
;	CALLTL	InterruptsOn
	
	tst.w	FadeOffFlag		;Normally it will be fade on, these are for on
	beq.s	101$
;	DUMPMSG	<in keyfade killing alpha key>
	bsr	CUTITONOFF

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off
	CALLTL	KillAlphaKey		;TEST!!!DEH031595

508$
101$
	movem.l	(sp)+,d0-d6
	rts
 ENDC



 IFEQ 1
****************************************************************
* HandleAlphaAuto(->TB)
* d0=auto/unauto, a0->logicTbl, a2->data, a3->FG, a4->EFXlib, a5->TB
**
HandleAlphaAuto:	
	DUMPMSG	<HandleAlphaAuto>
	movem.l	d0-d6,-(sp)

	WAITUNTIL	-1

	DEBUGMSG DBFS,<HandleAlphaAuto>
	move.l	#$10000,d3
	moveq	#0,d2
	GET.w	TB_FCountSec,d2	;FrameCount for effect (was Pri pre 1/13/94)
*	move.w	KeyFadeTime,d2  ;maybe should look at setting in swithcer too.
	DEBUGREG DBFS,<D2 FRAME COUNT>

 	DUMPMEM <EF_OLDTBar>,EF_OldTBar(a4),#16
 	DUMPMEM <TB_TValSec>,TB_TValSec(a5),#16

	asr.w	d2	
	divu	d2,d3		;incremental time

	swap	d3		;clear upper word
	clr.w	d3
	swap	d3
	DEBUGREG DBFS,<D3 FADE TIME?>	

;	CALLTL	InterruptsOff

	IFD	AACHIPS		
	move.l	#$1,d1
	moveq	#0,d4
	ENDC


	IFND	AACHIPS
	move.l	#$1,d1		;
	tst.w	FadeOffFlag	;Normally it will be fade on, these are for on
	bne.s	45$
	moveq	#0,d4
	ENDC

45$
	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>
*************************************************************
*
* KEY FADE LOOP
*
*************************************************************
	bra	50$
20$
	move.l	d4,d0

;;	CALLEF  ProcessDuring	
;;	DEBUGREG  DBFS,<BEFORE HandleAlpha>
;;	DUMPREG	<d0 time>
	bsr	HandleAlpha		

	btst.b	#WAITABORT_BIT,TB_Flags3(a5)
	bne	39$

;	DEBUGREG	DBFS,<D2-COUNT, D3-INC, D4-FADE>

	add.l	d3,d4
50$	dbra	d2,20$

39$		
;	CALLTL	InterruptsOn
	
	tst.w	FadeOffFlag	;Normally it will be fade on, these are for on
	beq.s	101$
;	DUMPMSG	<in keyfade killing alpha key>
	bsr	CUTITONOFF

	bclr.b	#B_KeyEnable-8,TB_KeyModeSec(a5)	;turn keying off
	CALLTL	KillAlphaKey		;TEST!!!DEH031595


101$
	movem.l	(sp)+,d0-d6
	rts
 ENDC


CUTITONOFF:
	movem.l	d0-d6,-(sp)

*	WAITUNTIL	-2
	WAITUNTIL	-1

	move.l	TB_CurrentAlphaBM(a5),a1

	DEA.l	TB_VTSetUp,a1

	move.w	#$0c,d1
	move.l	#$ff,d0

	tst.w	FadeOffFlag			;Normally it will be fade on
	beq.s	10$

	move.w	#$00,d1
	move.l	#$00,d0
10$
	ELHPUT_CD_R	a1,d0			;**CHANGING FADER VALUE HERE
	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR	;Not DIB, even though we're doing a 2 bit key
 
	IFND	AACHIPS		
	lea	FadeDIB(pc),a0	;USE A DIFFERENT TABLE FOR DIB ON A2000 OR DIBGR ON A4000
	move.l	0(a0,d1.w),TB_CurrentAlphaPaletteRGB(a5)
	move.l	0(a0,d1.w),TB_CurrentAlphaPalettePreview(a5)
	ENDC

	IFD	AACHIPS
	lea	AAFadeDIB(pc),a0	;USE A DIFFERENT TABLE FOR DIB ON A2000 OR DIBGR ON A4000
;;	DUMPREG	<D1-PALETTE SETTING>
	move.l	0(a0,d1.w),TB_CurrentAlphaPaletteRGB(a5)
	move.l	0(a0,d1.w),TB_CurrentAlphaPalettePreview(a5)
	ENDC

	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR	;IS TOO necessary here

	CALLTL	InstallAVEIdoELH		;<<<THE CHANGE TAKES PLACE HERE<<<


	tst.w	FadeOffFlag
;	bne	33$	
	move.w	#$1ff,TB_TValSec(a5)	
33$
	CALLTL	UpdateTBar
;	CALLTL	ReDoAllButtonRows

	movem.l	(sp)+,d0-d6
	rts



****************************************************************
* HandleAlphaTBar(->TB, time, interfaceFlag)
*   		     a5    d0        d1
* NEW
* d0=TBar, d1=mode, a0->logicTbl
* a2->Effect data, a3->FG, a4->EFXlib, a5->TB

HandleAlphaTBar
	movem.l	d0-d5/a0-a6,-(sp)
	tst.l	TB_CurrentAlphaBM(a5)
	bne.s	6$				;jump if alpha up

	PUT.w	FrameLoadBank,TB_OLaySec 	;did FrameToMain, show correct bank
	moveq	#0,d0
	move.w	KeyTop,d0
	bsr	PutUpKey
6$
	moveq	#0,d0
	move.w	TB_TValSec(a5),d0
	lsl.w	#7,d0

	move.w	FadeOffFlag,d1			;keep fadeoffflag
	move.w	#0,FadeOffFlag			;tbar always works the same way
	move.l	d0,d4

	bsr	HandleAlpha

	move.w	d1,FadeOffFlag			;restore fadeoffflag
	
	move.w	TB_TValSec(a5),EF_OldTBar(a4)
	cmp.w	#$01ff,TB_TValSec(a5)
	bne	10$
	move.w	#1,FadeOffFlag
	
10$
	movem.l	(sp)+,d0-d5/a0-a6
	rts



*********************************************************
* NEW NOTE!!! Currently d1 isn't looked at ????
* d0=Time, d1=mode,  a0->logicTbl
* a2->Effect data, a3->FG, a4->EFXlib, a5->TB
* d1=0 no elh, =1 to elh

HandleAlpha:
	movem.l	d0-d1/a0-a1,-(sp)

;	DUMPREG	<HandleAlpha>
	move.l	TB_CurrentAlphaBM(a5),a1

	DEA.l	TB_VTSetUp,a1

	tst.w	FadeOffFlag	;Normally it will be fade on
	beq.s	4$
;	DUMPMSG	<FadeOff>
	neg.l	d0		;Fade Off ->0
	addi.l	#$10000,d0
	lsr.l	#8,d0
	BRA	22$

4$
	asr.l	#8,d0		; changed to 7 from 8 TEST ADDED BRA 22$
22$
	cmpi.w	#VTI_CD_SHOWB,d0
	bls.s	10$
	move.w	#VTI_CD_SHOWB,d0		;Crop to $ff

* 0 <= d0 <= $ff
10$	move.w	d0,d1		;stash it
	ori.w	#%11000000,d0	;USE %11110000 FOR 4 BIT KEY, CD will go from $ff->$C0 four times

;;	DUMPHEXI.w	<>,d0,<\>
	ELHPUT_CD_R	a1,d0			;**CHANGING FADER VALUE HERE
	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR	;Not DIB, even though we're doing a 2 bit key

*	CALLEF	ChangeClips
	moveq	#2,d0
*	CALLEF	ChangeIS

;----
70$
* Need new TB_CurrentAlphaPalette here
	rol.b	#4,d1			;USE #6 FOR 4 BIT KEY, upper two bits of 255 TBar * 4
	andi.w	#%1100,d1		;AND 111100 FOR 4 BIT KEY

;;	DUMPUDEC.w	<palette#=>,d1,<\>

 	IFND	AACHIPS		
	lea	FadeDIB(pc),a0	;USE A DIFFERENT TABLE FOR DIB ON A2000 OR DIBGR ON A4000
	move.l	0(a0,d1.w),TB_CurrentAlphaPaletteRGB(a5)
	move.l	0(a0,d1.w),TB_CurrentAlphaPalettePreview(a5)
	ENDC

	IFD	AACHIPS
	lea	AAFadeDIB(pc),a0	;USE A DIFFERENT TABLE FOR DIB ON A2000 OR DIBGR ON A4000
;;	DUMPREG	<D1-PALETTE SETTING>
	move.l	0(a0,d1.w),TB_CurrentAlphaPaletteRGB(a5)
	move.l	0(a0,d1.w),TB_CurrentAlphaPalettePreview(a5)
	ENDC

;;	DUMPREG	<PRIOR TO ELHPUT_CDS_I>
	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR	;IS TOO necessary here
	CALLTL	InstallAVEIdoELH		;<<<THE CHANGE TAKE PLACE HERE<<<

	CALLTL	UpdateTBar
;	CALLTL	ReDoAllButtonRows

	movem.l	(sp)+,d0-d1/a0-a1 
	rts



**************************************************
**** DEAD CODE LEFT HERE FOR HOSTORIC REASONS ****
**************************************************
	IFD	AACHIPSXXXX 
ECS_TSIZE	equ	34
AA_TSIZE	equ	132
FADE_FIELDS	equ	9
SwitcherAutoFade:
	movem.l	d2-d5/a2-a3/a5-a6,-(sp)
	CALLTL	AllInterruptsOff

	lea	TB_VTSetUp(a5),a3
	btst.l	#BIT_DIB_IN_USE,d5	; is there a DIB key in use?
	bne	.FadeOut
	btst.l	#BIT_DIB_READY,d5	; is there a DIB key ready?
	beq	.FadeNoKey

************************************
* setup for fade in

	ELHCLEAR_USERON	a3
	move.w	TB_MainSec(a5),d0
	CALLTL	Mask2AM
	ELHPUT_AM_R	a3,d0	; AM is always BG
	btst.l	#BIT_READY_BANK,d5
	bne.s	10$

	ELHPUT_BM_I	a3,VTI_BM_DAC0 ; CG to go to main is in DV1
	bclr.l	#BIT_DIB_IN_USE_BANK,d5
	move.w	#%00010000,TB_OLaySec(a5)
	bra.s	20$	
10$
	ELHPUT_BM_I	a3,VTI_BM_DAC1 ; CG to go to main is in DV2
	bset.l	#BIT_DIB_IN_USE_BANK,d5
	move.w	#%00100000,TB_OLaySec(a5)
20$
	ELHPUT_CDS_I 	a3,VTI_CDS_DIBGR
	ELHPUT_CD_I	a3,VTI_CD_SHOWA
	ELHCLEAR_BRIDGE	a3
	bset.l	#BIT_DIB_IN_USE,d5
	and.l	#~(MASK_DIB_READY|MASK_EFFECT_READY|MASK_READY),d5 ;;;

************************************
* do the fade
* (key always in ChipKey)
*
	lea.l	MagicPal,a2
	moveq.l	#ECS_TSIZE,d3
	lea.l	MagicCDAC,a6
	moveq.l	#FADE_FIELDS-1,d2

.NextField
	moveq.l	#0,d0
	move.b	(a6)+,d0
	ELHPUT_CD_R		a3,d0
	move.l	a2,a0
*	move.l	gb_ChipKey(a4),a1
*	moveq.l	#22,d0
	CALLTL	InstallIKeyDoELH
	CALLTL	Wait4Top
	add.l	d3,a2 
	dbra	d2,.NextField

***
* cleanup and exit
	lea		TB_VTSetUp(a5),a3
	clr.w		TB_TValSec(a5)
	move.w		TB_PrvwSec(a5),d0
	CALLTL		Mask2PV
	ELHPUT_PV_R	a3,d0
	ELHPUT_CDS_I	a3,VTI_CDS_DIB
	ELHPUT_CD_I	a3,VTI_CD_SHOWB
	ELHCLEAR_USERON	a3
	tst.w		TB_UserOn(a5)
	beq.s		.UserDone
	ELHSET_USERON	a3
.UserDone

	lea.l	_SwitcherPalette,a0

	CALLTL	InstallIKeyDoELH
	bra		.Exit

************************************
.FadeOut
;	DUMPMSG	<.FadeOut>
	ELHCLEAR_USERON	a3
	clr.w	TB_OLaySec(a5)
	bclr.l	#BIT_DIB_IN_USE,d5

	ELHPUT_CDS_I 	a3,VTI_CDS_DIBGR

	lea.l	MagicPal+(ECS_TSIZE*(FADE_FIELDS-1)),a2
	moveq.l	#ECS_TSIZE,d3

	lea.l	MagicCDAC+FADE_FIELDS,a6
	moveq.l	#FADE_FIELDS-1,d2

.NextField2
	moveq.l	#0,d0
	move.b	-(a6),d0
	ELHPUT_CD_R		a3,d0
	move.l	a2,a0
*	move.l	gb_ChipKey(a4),a1
	moveq.l	#22,d0
	CALLTL	InstallIKeyDoELH
	CALLTL	Wait4Top
	sub.l	d3,a2
	dbra	d2,.NextField2

* cleanup and exit
	move.w	TB_MainSec(a5),d0
	CALLTL	Mask2BM
	ELHPUT_BM_R		a3,d0
	ELHPUT_CDS_I	a3,VTI_CDS_CD
	ELHPUT_CD_I		a3,VTI_CD_SHOWB
	tst.w	TB_UserOn(a5)
	beq.s	.UserDone2
	ELHSET_USERON	a3
.UserDone2
	CALLTL	InstallAVEIdoELH

	bra		.Exit

************************************
.FadeNoKey
	CALLTL	InstallAVEI
	and.l	#~(MASK_DIB_READY|MASK_EFFECT_READY|MASK_READY),d5

* fade from AM->BM
.StartTop
	move.w	TB_MainSec(a5),d0
	move.w	TB_PrvwSec(a5),d1
	cmp.w	d0,d1
	beq		.ClearExit	; source = destination
	CALLTL	Mask2AM
	ELHPUT_AM_R	a3,d0
	move.w	d1,d0
	CALLTL	Mask2BM
	ELHPUT_BM_R a3,d0
	ELHPUT_CDS_I a3,VTI_CDS_CD

* get starting value (may be non-zero if tbar moved manually)
	move.w	TB_TValSec(a5),d2

	moveq.l	#16,d1
	move.w	TB_FCountModePri(a5),d0
	blt.s	.NextFade
	add.w	#16,d1
	tst.w	d0
	beq.s	.NextFade
	add.w	#16,d1

.NextFade
	move.w	d2,d0
	lsr.w	#1,d0			; divide TBar value by 2 (0->255)
	ELHPUT_CD_R	a3,d0
	CALLTL	SendELH2Toaster
	move.w	d2,TB_TValSec(a5) ; (0->511)
	CALLTL	UpdateTBar
	add.w	d1,d2
	cmp.w	#512-1,d2
	blt.s	.NextFade

* set BM = AM in case of fader leakage
	move.w	TB_PrvwSec(a5),d0
	CALLTL	Mask2AM
	ELHPUT_AM_R	a3,d0
	move.w	TB_MainSec(a5),d0
	CALLTL	Mask2PV
	ELHPUT_PV_R	a3,d0
	ELHPUT_CD_I	a3,VTI_CD_SHOWB
	CALLTL	SendELH2Toaster

* swap button rows
	move.w	TB_MainSec(a5),d0
	move.w	TB_PrvwSec(a5),TB_MainSec(a5)
	move.w	d0,TB_PrvwSec(a5)

.ClearExit
	moveq.l	#0,d0
	move.w	d0,TB_OLaySec(a5) ; if tbar previously done manually, this is lit
	move.w	d0,TB_TValSec(a5) ; we're done with this pup

************************************
.Exit
	CALLTL	AllInterruptsOn
	movem.l	(sp)+,d2-d5/a2-a3/a5-a6
	rts
	ENDC

********************************************************************

*********************************************************
* NEW NOTE!!! Currently d1 isn't looked at ????
* d0=Time, d1=mode,  a0->logicTbl
* a2->Effect data, a3->FG, a4->EFXlib, a5->TB
* d1=0 no elh, =1 to elh
* Added by Arnie Tue Feb 21 22:27:39 1995, from HandleAlpha above

HandleAlpha4:
	movem.l	d0-d1/a0-a1,-(sp)
	DEA.l	TB_VTSetUp,a1

	tst.w	FadeOffFlag	;Normally it will be fade on
	beq.s	4$
	neg.l	d0		;Fade Off ->0
	addi.l	#$10000,d0

4$	lsr.l	#8,d0

	cmpi.w	#VTI_CD_SHOWB,d0
	bls.s	10$
	move.w	#VTI_CD_SHOWB,d0		;Crop to $ff

* 0 <= d0 <= $ff
10$	move.w	d0,d1		;stash it
	ori.w	#%11110000,d0	;USE %11110000 FOR 4 BIT KEY, CD will go from $ff->$f0 16 times

;	DUMPHEXI.w	<>,d0,<\>
	ELHPUT_CD_R	a1,d0
	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR

	CALLEF	ChangeClips
	moveq	#2,d0
	CALLEF	ChangeIS

	GET.l	TB_ColorCycle,d0
	beq.s	70$
	bset.b	#0,TB_CycleFlags(a5)
	CALLTL	VBServer1		;do the colorcycling VertIntServer

;----
70$
* Need new TB_CurrentAlphaPalette here
	rol.b	#6,d1			;USE #6 FOR 4 BIT KEY, upper FOUR bits of 255 TBar * 4
	andi.w	#%111100,d1		;AND 111100 FOR 4 BIT KEY

;	DUMPUDEC.w	<palette#=>,d1,<\>

	lea	AAFadeDIGBR(pc),a0	;USE A DIFFERENT TABLE FOR DIB ON A2000 OR DIBGR ON A4000
;	DUMPUDEC.w	<palette#=>,d1,<  >
;	DUMPUDEC.w	< palette@ >,a0,<\>
	move.l	0(a0,d1.w),TB_CurrentAlphaPaletteRGB(a5)
	move.l	0(a0,d1.w),TB_CurrentAlphaPalettePreview(a5)

	ELHPUT_CDS_I	a1,VTI_CDS_DIBGR	;probably not necessary here

	CALLTL	InstallAVEIdoELH

	CALLTL	UpdateTBar
	CALLTL	ReDoAllButtonRows

	movem.l	(sp)+,d0-d1/a0-a1
	rts

*-----------------------------------------------------



*-----------------------------------------------------
FXLogicBase	SET	*

AlphaOnLogic:
	dc.l	AlphaOnKeys-FXLogicBase
	dc.l	AlphaOnKeys-FXLogicBase
	dc.l	AlphaOnKeys-FXLogicBase
	dc.l	AlphaOnKeys-FXLogicBase

	dc.l	AlphaOnELH-FXLogicBase
	dc.l	AlphaOnELH-FXLogicBase
	dc.l	AlphaOnELH-FXLogicBase
	dc.l	AlphaOnELH-FXLogicBase

	dc.l	EKE_FROZE!EKE_NOKEY!EKE_LOCKKEY!EKE_LOCKCLIP		;flags
	dc.w	TBarTimeMax	;WORD	EKE_Tbar1	;bottom of stage

;------
AlphaOnKeys
;UnTake
	dc.b FromHell	;BYTE	FTR_OLaySrc	;how to swap rows
	dc.b FromMain	;BYTE	FTR_MainSrc
	dc.b FromOLay	;BYTE	FTR_PrvwSrc
	dc.b 0		;BYTE	FTR_pad		;pad to long word
	dc.w _LVOoooo_oo_o_O ;APTR	FTR_OLayLogic	;logic function
	dc.w _LVOXXXX_FF_X_M ;APTR	FTR_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	FTR_PrvwLogic

;Take
	dc.b FromOLay	;BYTE	FTR_OLaySrc	;how to swap rows
	dc.b FromMain	;BYTE	FTR_MainSrc
	dc.b FromPrvw	;BYTE	FTR_PrvwSrc
	dc.b 0		;BYTE	FTR_pad		;pad to long word
	dc.w _LVOoooo_FF_o_O ;APTR	FTR_OLayLogic	;logic function
	dc.w _LVOXXXX_FF_X_M ;APTR	FTR_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	FTR_PrvwLogic

;TransStage
	dc.b FromPrvw	;BYTE	TST_OLaySrcDown ;how to swap rows on down transition
	dc.b FromMain	;BYTE	TST_MainSrcDown
	dc.b FromPrvw	;BYTE	TST_PrvwSrcDown
	dc.b 0		;BYTE	TST_OLaySrcUp	;how to swap rows on up transition
	dc.b 0		;BYTE	TST_MainSrcUp
	dc.b 0		;BYTE	TST_PrvwSrcUp
	dc.w _LVOoooo_FF_o_O ;APTR	TST_OLayLogic	;logic function for this stage
	dc.w _LVOXXXX_FF_X_M ;APTR	TST_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	TST_PrvwLogic

AlphaOnELH
;UnTake
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromDAC0Main	;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_CD		;BYTE	TST_CDS

;Take
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromOLay		;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_DIB	;BYTE	TST_CDS

;During
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromOLay		;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_DIB	;BYTE	TST_CDS

*-----------------------------------------------------
FXLogicBase	SET	*

AlphaOffLogic:
	dc.l	AlphaOffKeys-FXLogicBase
	dc.l	AlphaOffKeys-FXLogicBase
	dc.l	AlphaOffKeys-FXLogicBase
	dc.l	AlphaOffKeys-FXLogicBase

	dc.l	AlphaOffELH-FXLogicBase
	dc.l	AlphaOffELH-FXLogicBase
	dc.l	AlphaOffELH-FXLogicBase
	dc.l	AlphaOffELH-FXLogicBase

	dc.l	EKE_FROZE!EKE_NOKEY!EKE_LOCKKEY!EKE_LOCKCLIP		;flags
	dc.w	TBarTimeMax	;WORD	EKE_Tbar1	;bottom of stage

;------
AlphaOffKeys
;UnTake
	dc.b FromOLay	;BYTE	FTR_OLaySrc	;how to swap rows
	dc.b FromMain	;BYTE	FTR_MainSrc
	dc.b FromPrvw	;BYTE	FTR_PrvwSrc
	dc.b 0		;BYTE	FTR_pad		;pad to long word
	dc.w _LVOoooo_FF_o_O ;APTR	FTR_OLayLogic	;logic function
	dc.w _LVOXXXX_FF_X_M ;APTR	FTR_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	FTR_PrvwLogic

;Take
	dc.b FromHell	;BYTE	FTR_OLaySrc	;how to swap rows
	dc.b FromMain	;BYTE	FTR_MainSrc
	dc.b FromPrvw	;BYTE	FTR_PrvwSrc
	dc.b 0		;BYTE	FTR_pad		;pad to long word
	dc.w _LVOoooo_oo_o_O ;APTR	FTR_OLayLogic
	dc.w _LVOXXXX_FF_X_M ;APTR	FTR_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	FTR_PrvwLogic

;TransStage
	dc.b FromOLay	;BYTE	TST_OLaySrcDown ;how to swap rows on down transition
	dc.b FromMain	;BYTE	TST_MainSrcDown
	dc.b FromPrvw	;BYTE	TST_PrvwSrcDown
	dc.b 0		;BYTE	TST_OLaySrcUp	;how to swap rows on up transition
	dc.b 0		;BYTE	TST_MainSrcUp
	dc.b 0		;BYTE	TST_PrvwSrcUp
	dc.w _LVOoooo_FF_o_O ;APTR	TST_OLayLogic	;logic function for this stage
	dc.w _LVOXXXX_FF_X_M ;APTR	TST_MainLogic
	dc.w _LVOXXXX_FF_X_P ;APTR	TST_PrvwLogic

AlphaOffELH
;UnTake
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromOLay		;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_DIB	;BYTE	TST_CDS

;Take
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromDAC0Main	;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_CD		;BYTE	TST_CDS

;During
	dc.b FromDAC0Main	;BYTE	TST_AM
	dc.b FromOLay		;BYTE	TST_BM
	dc.b FromDAC0Prvw	;BYTE	TST_PV
	dc.b FromLutMonoHell	;BYTE	TST_IS
	dc.b FromLutHell	;BYTE	TST_LK
	dc.b VTI_CDS_DIB	;BYTE	TST_CDS

*---------------------------------------------------
* d0=depth (can be upto 4 planes)
* This is typically called right after a CopList Install.
* It should stay ahead of the video beam.
**+ CopyKey2Chip
**+ 	movem.l	d0-d7/a0-a6,-(sp)
**+
**+ 	GET.l	TB_AlphaFastBM,a0
**+ 	GET.l	TB_AlphaChipBM,a1
**+
**+ 	lea	bm_Planes(a0),a0
**+ 	lea	bm_Planes(a1),a1
**+
**+ 	subq.w	#1,d0		;depth-1
**+ 	move.w	d0,d1		;stash
**+
**+ 5$	move.l	(a0)+,-(sp)
**+ 	move.l	(a1)+,-(sp)
**+ 	dbra	d0,5$
**+
**+ 	move.w	d1,-(sp)	;depth-1
**+ 	add.w	d1,d1
**+ 	add.w	d1,d1
**+ 	add.w	d1,d1		;(depth-1)*8
**+ 	addi.w	#16,d1
**+ 	move.w	d1,-(sp)	;OffsetToStackPlanes
**+
**+ 	GET.l	TB_AlphaFastBM,a0
**+ 	move.w	bm_Rows(a0),d0
**+ 	move.l	d0,-(sp)	;Row count (garbage in upper word)
**+ 	clr.l	-(sp)
**+
**+ *--------------------------
**+ * On Stack
**+ ;towards top of memory
**+ ;
**+ ;top:	APTR SourcePlane0
**+ ;	APTR DestPlane0
**+ ;	APTR SourcePlane1
**+ ;	APTR DestPlane1
**+ ;	.etc
**+ ;	APTR SourcePlaneN	;N=depth-1
**+ ;	APTR DestPlaneN
**+ ;
**+ ;10	UWORD Depth-1
**+ ;8	UWORD OffsetToStackPlanes ;sp+this ->top
**+ ;6	UWORD Rows count	  ;initially = bm_Rows
**+ ;4	UWORD garbage
**+ ;0	ULONG PlaneOffset
**+ ;sp-> here
**+ ;
**+ ;towards bottom
**+ *--------------------------
**+
**+ * Next row
**+ 10$	move.l	8(sp),d0	;reset stack ptr offset & depth-1
**+
**+ * Next plane
**+ * d0=negative offset into stack planes . #planes-1
**+ 20$	swap	d0
**+ 	move.l	0(sp,d0.w),a0		;source plane
**+ 	move.l	-4(sp,d0.w),a1		;dest plane
**+ 	subq.w	#8,d0			;->next plane
**+ 	swap	d0
**+
**+ 	move.l	(sp),d1			;plane offset
**+ 	lea	0(a0,d1.l),a0
**+ 	lea	0(a1,d1.l),a1
**+
**+ 	movem.l	(a0)+,d1-d7/a2-a6	;assume 768 bytes!!!
**+ 	movem.l	d1-d7/a2-a6,(a1)
**+ 	lea	48(a1),a1
**+ 	movem.l	(a0)+,d1-d7/a2-a6
**+ 	movem.l	d1-d7/a2-a6,(a1)
**+ 	lea	48(a1),a1
**+
**+ 	dbra	d0,20$			;do next plane
**+
**+ 	addi.l	#96,(sp)		;increase plane offset
**+ 	subq.w	#1,6(sp)		;dec row count
**+ 	bne.s	10$
**+
**+ 	move.w	8(sp),d0	;OffsetToStackPlanes
**+ 	lea	4(sp,d0.w),sp
**+
**+ 	movem.l	(sp)+,d0-d7/a0-a6
**+ 	rts
**+
**************************************************
**+	IFD	CRAP	;This works but it's slower than above code
**+* d0=depth (can be upto 4 planes)
**+CopyKey2Chip
**+	movem.l	d0-d4/a0-a5,-(sp)
**+
**+	GET.l	TB_AlphaFastBM,a0
**+	GET.l	TB_AlphaChipBM,a1
**+
**+	move.w	bm_Rows(a0),d1
**+
**+	lea	bm_Planes(a0),a0
**+	lea	bm_Planes(a1),a1
**+
**+	subq.w	#1,d0
**+	subq.w	#1,d1
**+
**+* d0=depth-1, d1=rows-1
**+
**+	moveq	#0,d3			;plane offset
**+
**+* Next row
**+10$	movea.l	a0,a2			;->source planes
**+	movea.l	a1,a3			;->dest planes
**+
**+	move.w	d0,d4			;depth -1
**+
**+* Next plane
**+20$	move.l	(a2)+,a4		;source plane
**+	move.l	(a3)+,a5		;dest plane
**+
**+	lea	0(a4,d3.l),a4
**+	lea	0(a5,d3.l),a5
**+
**+	moveq	#(96/4)-1,d2		;assume 768
**+30$	move.l	(a4)+,(a5)+
**+	dbra	d2,30$
**+
**+	dbra	d4,20$			;do next plane
**+
**+	add.l	#96,d3			;inc offset
**+	dbra	d1,10$			;do next row
**+
**+	movem.l	(sp)+,d0-d4/a0-a5
**+	rts
**+
**+	ENDC
********************************************************************
		CNOP	0,4

MyPictureInfo	ds.b	PI_SIZEOF
MyFrameLoad	ds.b	frml_SIZEOF

FrameLoadBank	dc.w	0
KeyTop		dc.w	0
FadeOffFlag	dc.w	0
KeyFadeTime	dc.w	30


		CNOP	0,4
********************************************************************
********************************************************************
********************************************************************

	IFD	AACHIPS

********************************************************************
* AA Keys w/o Userinterface
********************************************************************

* No Interface or UserOlay, 1 plane DIB Key, AA machine
AAKey1
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB0
;; dc.l ($0f000000&~PACO_Mask_DIBGR)!PACO_DIB0	;debug
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB3

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB0

*------------------------------------------------------------
* No Interface or UserOlay, 2 plane DIB Key, AA machine
AAKey2
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB0
;; dc.l ($00f00000&~PACO_Mask_DIBGR)!PACO_DIB0	;debug
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB1
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB2
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB3

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIB0

*------------------------------------------------------------
* No Interface or UserOlay, 3 plane DIBGR Key, AA machine
AAKey3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
;; dc.l ($000f0000&~PACO_Mask_DIBGR)!PACO_DIBGR0	;debug
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

*------------------------------------------------------------
* No Interface or UserOlay, 4 plane DIBGR Key, AA machine

AAKey4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
;; dc.l  ($00ff0000&~PACO_Mask_DIBGR)!PACO_DIBGR0	;debug
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

********************************************************************
* AA Keys with UserInterface
********************************************************************

* UserOlay Off/On, 6 plane Switcher Interface, 1 plane DIB Key, AA machine
AAKey1I
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
;; dc.l ($0f000000&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0	;debug

 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb32&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb33&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb34&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb35&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb36&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb37&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb38&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb39&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb40&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb41&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb42&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb43&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb44&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb45&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb46&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb47&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb48&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb49&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb50&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb51&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb52&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb53&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb54&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb55&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb56&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb57&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb58&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb59&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb60&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb61&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb62&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb63&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb32&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb33&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb34&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb35&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb36&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb37&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb38&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb39&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb40&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb41&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb42&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb43&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb44&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb45&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb46&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb47&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb48&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb49&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb50&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb51&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb52&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb53&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb54&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb55&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb56&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb57&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb58&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb59&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb60&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb61&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb62&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb63&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0

*------------------------------------------------------------
* UserOlay Off/On, 5 plane Switcher Interface, 2 plane DIB Key, AA machine
AAKey2I
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
;; dc.l ($00f00000&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0	;debug

 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB1
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB1
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB1
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB1

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB2
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB2
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB2
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB2

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_UIO0!PACO_DIB3
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_UIO2!PACO_DIB3
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_UIO3!PACO_DIB3
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB3

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_UIO1!PACO_DIB0

*------------------------------------------------------------
* UserOlay Not Allowed!, 4 plane Switcher Interface, 3 plane DIBGR Key, AA machine
AAKey3I
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
;; dc.l ($000f0000&~PACO_Mask_DIBGR)!PACO_DIBGR0	;debug

 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRd

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAKey4I
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRc

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRd

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRe

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

	ENDC

	IFND	AACHIPS
********************************************************************
* NonAA Keys w/o UserInterface
********************************************************************
*  No Interface or UserOlay, 1 plane DIB Key, Non AA machine

* UserOlay Off, 2 plane Sw. Interface, 1 plane DIB Key, Non AA machine
NonAAKey1
	dc.w	$666	;ib=00
	dc.w	$669	;ib=11
	dc.w	$666	;ib=00

*  No Interface or UserOlay, 2 plane DIB Key, Non AA machine
NonAAKey2
	dc.w	$666	;ib=00
	dc.w	$668	;ib=01
	dc.w	$667	;ib=10
	dc.w	$669	;ib=11

	dc.w	$666	;ib=00

* NOTE: We don't allow 3 or 4 bit keys on NonAA machines.

********************************************************************
* NonAA Keys with UserInterface
********************************************************************

* UserOlay On, 2 plane Sw. Interface, 1 plane DIB Key, Non AA machine
NonAAKey1I
	dc.w	$006	;ibgr=0000
	dc.w	$846	;ibgr=0001
	dc.w	$7b6	;ibgr=0010
	dc.w	$ff6	;ibgr=0011
	dc.w	$009	;ibgr=1100
	dc.w	$849	;ibgr=1101
	dc.w	$7b9	;ibgr=1110
	dc.w	$ff9	;ibgr=1111

	dc.w	$846	;ibgr=0001

* UserOlay On, 2 plane Sw. Interface, 2 plane DIB Key, Non AA machine
NonAAKey2I
	dc.w	$006	;ibgr=0000
	dc.w	$846	;ibgr=0001
	dc.w	$7b6	;ibgr=0010
	dc.w	$ff6	;ibgr=0011
	dc.w	$008	;ibgr=0100
	dc.w	$848	;ibgr=0101
	dc.w	$7b8	;ibgr=0110
	dc.w	$ff8	;ibgr=0111
	dc.w	$007	;ibgr=1000
	dc.w	$847	;ibgr=1001
	dc.w	$7b7	;ibgr=1010
	dc.w	$ff7	;ibgr=1011
	dc.w	$009	;ibgr=1100
	dc.w	$849	;ibgr=1101
	dc.w	$7b9	;ibgr=1110
	dc.w	$ff9	;ibgr=1111

	dc.w	$846	;ibgr=0001

* UserOlay Off, 2 plane Sw. Interface, 1 plane DIB Key, Non AA machine
NonAAKey1GrayI
	dc.w	$006	;ib=00
	dc.w	$666	;ib=00
	dc.w	$996	;ib=00
	dc.w	$dd6	;ib=00
	dc.w	$009	;ib=11
	dc.w	$669	;ib=11
	dc.w	$999	;ib=11
	dc.w	$dd9	;ib=11

	dc.w	$666	;ib=00

* UserOlay Off, 2 plane Sw. Interface, 2 plane DIB Key, Non AA machine
NonAAKey2GrayI
	dc.w	$006	;ib=00
	dc.w	$666	;ib=00
	dc.w	$996	;ib=00
	dc.w	$dd6	;ib=00
	dc.w	$008	;ib=01
	dc.w	$668	;ib=01
	dc.w	$998	;ib=01
	dc.w	$dd8	;ib=01
	dc.w	$007	;ib=10
	dc.w	$667	;ib=10
	dc.w	$997	;ib=10
	dc.w	$dd7	;ib=10
	dc.w	$009	;ib=11
	dc.w	$669	;ib=11
	dc.w	$999	;ib=11
	dc.w	$dd9	;ib=11

	dc.w	$666	;ib=00

* NOTE: We don't allow 3 or 4 bit keys on NonAA machines.

	ENDC

*----------------------------
	IFD	AACHIPS

* Keys without user Interface
AAKeys
	dc.l	AAKey1
	 dc.w	0,1	;#interfacePlanes, #keyPlanes

	dc.l	AAKey2
	 dc.w	0,2	;#interfacePlanes, #keyPlanes

	dc.l	AAKey3
	 dc.w	0,3	;#interfacePlanes, #keyPlanes

	dc.l	AAKey4
	 dc.w	0,4	;#interfacePlanes, #keyPlanes

* Keys with user Interface, (with or w/o Userinterface overlay)
AAKeysI
	dc.l	AAKey1I
	 dc.w	6,1	;#interfacePlanes, #keyPlanes

	dc.l	AAKey2I
	 dc.w	5,2	;#interfacePlanes, #keyPlanes

	dc.l	AAKey3I
	 dc.w	4,3	;#interfacePlanes, #keyPlanes

	dc.l	AAKey4I
	 dc.w	3,4	;#interfacePlanes, #keyPlanes

	ENDC

	IFND	AACHIPS
* Keys without user Interface
NonAAKeys
	dc.l	NonAAKey1
	 dc.w	0,1	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2
	 dc.w	0,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2
	 dc.w	0,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2
	 dc.w	0,2	;#interfacePlanes, #keyPlanes

* Keys with user Interface, w/ Userinterface overlay
NonAAKeysI
	dc.l	NonAAKey1I
	 dc.w	2,1	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2I
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2I
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2I
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

* Keys with user Interface, w/o Userinterface overlay
NonAAKeysGrayI
	dc.l	NonAAKey1GrayI
	 dc.w	2,1	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2GrayI
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2GrayI
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

	dc.l	NonAAKey2GrayI
	 dc.w	2,2	;#interfacePlanes, #keyPlanes

	ENDC

*****************************************************************
*****************************************************************
*****************************************************************
* The following Palettes are used for Fading a DIB Key on an AA machine
*
* No UserOlay allowed during Fade, 5 plane Switcher Interface, 2 plane DIBGR! Key, AA machine
	IFND 	AACHIPS
FadeDIB:
	dc.l    FadeDIB3
	dc.l	FadeDIB2
	dc.l	FadeDIB1
	dc.l	FadeDIB0
	
LO_R	equ	$800
LO_G	equ	$080
LO_B	equ	$008
LO_I	equ	$001

DEF0	equ	$000
DEF1	equ	$742
DEF2	equ	$746
DEF3	equ	$776

; R G B I
; RG RB RI GB GI BI
; RGB RGI GBI RBI
MagicPal
FadeDIB3
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR3,DEF1!PACO_NonAA_DIBGR3,DEF2!PACO_NonAA_DIBGR3,DEF3!PACO_NonAA_DIBGR3	
	dc.w	DEF1

FadeDIB2
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR3,DEF1!PACO_NonAA_DIBGR3,DEF2!PACO_NonAA_DIBGR3,DEF3!PACO_NonAA_DIBGR3	
	dc.w	DEF0!PACO_NonAA_DIBGR7,DEF1!PACO_NonAA_DIBGR7,DEF2!PACO_NonAA_DIBGR7,DEF3!PACO_NonAA_DIBGR7	
	dc.w	DEF1

FadeDIB1
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR3,DEF1!PACO_NonAA_DIBGR3,DEF2!PACO_NonAA_DIBGR3,DEF3!PACO_NonAA_DIBGR3	 
	dc.w	DEF0!PACO_NonAA_DIBGR7,DEF1!PACO_NonAA_DIBGR7,DEF2!PACO_NonAA_DIBGR7,DEF3!PACO_NonAA_DIBGR7	 
	dc.w	DEF0!PACO_NonAA_DIBGRb,DEF1!PACO_NonAA_DIBGRb,DEF2!PACO_NonAA_DIBGRb,DEF3!PACO_NonAA_DIBGRb	 
	dc.w	DEF1

FadeDIB0
	dc.w	DEF0!PACO_NonAA_DIBGR0,DEF1!PACO_NonAA_DIBGR0,DEF2!PACO_NonAA_DIBGR0,DEF3!PACO_NonAA_DIBGR0	
	dc.w	DEF0!PACO_NonAA_DIBGR7,DEF1!PACO_NonAA_DIBGR7,DEF2!PACO_NonAA_DIBGR7,DEF3!PACO_NonAA_DIBGR7	
	dc.w	DEF0!PACO_NonAA_DIBGRb,DEF1!PACO_NonAA_DIBGRb,DEF2!PACO_NonAA_DIBGRb,DEF3!PACO_NonAA_DIBGRb	
	dc.w	DEF0!PACO_NonAA_DIBGRf,DEF1!PACO_NonAA_DIBGRf,DEF2!PACO_NonAA_DIBGRf,DEF3!PACO_NonAA_DIBGRf	
	dc.w	DEF1



 IFEQ 1
FadeDIB3
	dc.w	DEF0,DEF1,DEF2,DEF3	; <RG> RB RI GB GI BI		
	dc.w	DEF0!LO_R!LO_G,DEF1!LO_R!LO_G,DEF2!LO_R!LO_G,DEF3!LO_R!LO_G
	dc.w	DEF0!LO_R!LO_G,DEF1!LO_R!LO_G,DEF2!LO_R!LO_G,DEF3!LO_R!LO_G
	dc.w	DEF0!LO_R!LO_G,DEF1!LO_R!LO_G,DEF2!LO_R!LO_G,DEF3!LO_R!LO_G
	dc.w	DEF1

FadeDIB2
	dc.w	DEF0,DEF1,DEF2,DEF3	; RG <RB> RI GB GI BI
	dc.w	DEF0!LO_R!LO_B,DEF1!LO_R!LO_B,DEF2!LO_R!LO_B,DEF3!LO_R!LO_B
	dc.w	DEF0!LO_R!LO_B,DEF1!LO_R!LO_B,DEF2!LO_R!LO_B,DEF3!LO_R!LO_B
	dc.w	DEF0!LO_R!LO_B,DEF1!LO_R!LO_B,DEF2!LO_R!LO_B,DEF3!LO_R!LO_B
	dc.w	DEF1

FadeDIB1
	dc.w	DEF0,DEF1,DEF2,DEF3	; RG RB RI <GB> GI BI 
	dc.w	DEF0!LO_G!LO_B,DEF1!LO_G!LO_B,DEF2!LO_G!LO_B,DEF3!LO_G!LO_B
	dc.w	DEF0!LO_G!LO_B,DEF1!LO_G!LO_B,DEF2!LO_G!LO_B,DEF3!LO_G!LO_B
	dc.w	DEF0!LO_G!LO_B!LO_R,DEF1!LO_G!LO_B!LO_R,DEF2!LO_G!LO_B!LO_R,DEF3!LO_G!LO_B!LO_R
	dc.w	DEF1

FadeDIB0
	dc.w	DEF0,DEF1,DEF2,DEF3	; RG RB RI GB GI BI/ <RGI> /<RGBI>
	dc.w	D                                                                     EF0!LO_I!LO_R!LO_G,DEF1!LO_I!LO_R!LO_G,DEF2!LO_I!LO_R!LO_G,DEF3!LO_I!LO_R!LO_G
	dc.w	DEF0!LO_I!LO_R!LO_G,DEF1!LO_I!LO_R!LO_G,DEF2!LO_I!LO_R!LO_G,DEF3!LO_I!LO_R!LO_G
	dc.w	DEF0!LO_B!LO_I!LO_R!LO_G,DEF1!LO_B!LO_I!LO_R!LO_G,DEF2!LO_B!LO_I!LO_R!LO_G
	dc.w	DEF3!LO_B!LO_I!LO_R!LO_G
	dc.w	DEF1
 ENDC


MagicCDAC
	dc.b	$00,$10,$ff,$30,$ff,$e0,$ff,$c0,$ff
	dc.b	$00


	ENDC



AAFadeDIB:
	dc.l	AAFadeDIB3
	dc.l	AAFadeDIB2
	dc.l	AAFadeDIB1
	dc.l	AAFadeDIB0

AAFadeDIB0
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

AAFadeDIB1
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

AAFadeDIB2
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

AAFadeDIB3
 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb08&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb09&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb10&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb11&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb12&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb13&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb14&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb15&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb16&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb17&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb18&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb19&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb20&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb21&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb22&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb23&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb24&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb25&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb26&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb27&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb28&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb29&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb30&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb31&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0


*****************************************************************
*****************************************************************
*****************************************************************
* The following Palettes are used for Fading a DIGBR Key on an AA machine
*
* No UserOlay allowed during Fade, 3 plane Switcher Interface, 4 plane DIBGR! Key, AA machine

AAFadeDIGBR:
	dc.l	AAFadeDIGBRf
	dc.l	AAFadeDIGBRe
	dc.l	AAFadeDIGBRd
	dc.l	AAFadeDIGBRc
	dc.l	AAFadeDIGBRb
	dc.l	AAFadeDIGBRa
	dc.l	AAFadeDIGBR9
	dc.l	AAFadeDIGBR8
	dc.l	AAFadeDIGBR7
	dc.l	AAFadeDIGBR6
	dc.l	AAFadeDIGBR5
	dc.l	AAFadeDIGBR4
	dc.l	AAFadeDIGBR3
	dc.l	AAFadeDIGBR2
	dc.l	AAFadeDIGBR1
	dc.l	AAFadeDIGBR0


*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR0
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRc

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRd

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRe

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRf
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRf

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0



AAFadeDIGBR1
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRc

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRd

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRe
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRe

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0


*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR2
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRc

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRd
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRd

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0


*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR3
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRc
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRc

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0


*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR4
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRb
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRb

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0








*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR5
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGRa
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGRa

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0


*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR6
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR9
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR9

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0









*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR7
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR8
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR8

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0









*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR8
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR7
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR7

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0









*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBR9
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR6
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR6

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0



*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRa
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR5
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR5

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0










*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRb
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR4
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR4

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0











*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRc
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR3
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR3

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0







*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRd
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR2
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR2

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0




*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRe
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR1
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR1

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0






*------------------------------------------------------------
* UserOlay Not Allowed!, 3 plane Sw. Interface (no yellows), 4 plane DIBGR Key, AA machine

AAFadeDIGBRf
 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb00&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb02&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb03&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb04&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l  (VTrgb05&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb06Y&~PACO_Mask_DIBGR)!PACO_DIBGR0
 dc.l (VTrgb07Y&~PACO_Mask_DIBGR)!PACO_DIBGR0

 dc.l  (VTrgb01&~PACO_Mask_DIBGR)!PACO_DIBGR0

